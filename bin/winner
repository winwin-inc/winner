#!/usr/bin/env php
<?php

use Symfony\Component\Console\Application;
use winwin\winner\commands\CheckEnvCommand;
use winwin\winner\commands\ConfigureCommand;
use winwin\winner\commands\GenEnvCommand;
use winwin\winner\commands\LintCommand;
use winwin\winner\commands\DumpTokenCommand;
use winwin\winner\commands\EnumHelperCommand;
use winwin\winner\commands\KeygenCommand;
use winwin\winner\commands\EncryptCommand;
use winwin\winner\commands\DecryptCommand;
use winwin\winner\commands\TarsOutdatedCommand;
use winwin\winner\commands\TarsPublishCommand;
use winwin\winner\commands\TarsRequireCommand;
use winwin\winner\commands\TarsUpdateCommand;
use winwin\winner\commands\TarsUploadCommand;

foreach (array(__DIR__ . '/../../../autoload.php', __DIR__ . '/../vendor/autoload.php') as $file) {
    if (file_exists($file)) {
        $autoload = $file;
        break;
    }
}
if (!isset($autoload)) {
    fwrite(STDERR,
        'You need to set up the project dependencies using the following commands:' . PHP_EOL .
        'wget http://getcomposer.org/composer.phar' . PHP_EOL .
        'php composer.phar install' . PHP_EOL
    );

    die(1);
}
require($autoload);
unset($autoload);

$app = new Application('winner', '@git-version@');

$app->add(new LintCommand());
$app->add(new DumpTokenCommand());
$app->add(new EnumHelperCommand());
$app->add(new CheckEnvCommand());
$app->add(new GenEnvCommand());
$app->add(new TarsPublishCommand());
$app->add(new TarsUpdateCommand());
$app->add(new TarsRequireCommand());
$app->add(new TarsOutdatedCommand());
$app->add(new ConfigureCommand());
$app->run();
